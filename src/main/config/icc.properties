##
# ICC supports showing localized text in the UI
# For ICC to display text in a desired language, you must provide two settings: a language code and a country code.
# You will do that by providing a value for these two properties below:
# languageLocale
# and
# countryLocale
# To have ICC UI show the desired  language, you must:
# 1) set the languageLocale value below, for example: de
# 2) set the countryLocale value below, for example:  DE
# 3) if a language property file does not exist, create a new properties file with the language value and country value in the name, for example MessagesBundle_de_DE.properties
# 4) copy all the properties from the US English properties bundle file (MessagesBundle_en_US.properties) into the new file MessagesBundle_de_DE.properties
# 5) replace all the English text with the appropriate German translations
#
##
# Possible values for language code (i.e. English, French, German, Spanish, Italian) are: en, fr, de, sp, it
# See http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html
#languageLocale=de
languageLocale=en

# Possible values for country code English speaking countries (i.e. US, GreatBritain) are: US, GB, etc
# Possible values for country code German speaking countries (i.e. Germany, Austria, Switzerland) are: DE, AT, CH
# See http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html
#countryLocale=DE
countryLocale=US

# Value in seconds:
refreshNeighborsTime=90

# Value in seconds
refreshNodeInfoTime=10

iotaDownloadLink=http://85.93.93.110

iotaDownloadFilename=IRI-1.1.0.jar

# This is the default value for ICCR port number set in the new server dialog when adding a new server:
iccrDefaultPortNumber=14266

##
# A default value for the ICCR API key value.
# Will be set in the new server dialog when adding a new server:
# If the API key exact value is not in each request HTTP header sent to ICCR, then ICCR will refuse access
# This value must be the same string as set in the server's ICCR
##
iccrDefaultApiKey=secret

##
# Specification of ICCR servers
# First: a comma separated list of server keys, which are ID values
# Each server ID is known as a key.
# Each key is a unique identifier of that server
# The key is used to specify a block of config properties for that server
# Second: one block of configuration properties for each server
# Each server has 5 properties: name, ip, iccrPortNumber, iccrApiKey, walletCommand
# Note: walletCommand is only used if the server is "local"
# A server is local if it's ip value is either "localhost" or "127.0.0.1"
# Each server configuration property block specifies those 5 properties using a mechanism that embeds the server ID key in the property name
# The pattern is:
# server.<propertyname>.<serverkey>=<propertyvalue>
# Example:
# serverKeys=local
# server.name.local=Local
# server.ip.local=localhost
# server.iccrPortNumber.local=14266
# server.iccrApiKey.local=secret
# server.walletCommand.local=
##
serverKeys=
